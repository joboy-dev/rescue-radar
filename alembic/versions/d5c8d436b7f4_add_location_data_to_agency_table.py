"""add location data to agency table

Revision ID: d5c8d436b7f4
Revises: a2127ada0e3d
Create Date: 2024-12-28 15:48:41.089360

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


conn = op.get_bind()

# revision identifiers, used by Alembic.
revision: str = 'd5c8d436b7f4'
down_revision: Union[str, None] = 'a2127ada0e3d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agencies', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('agencies', sa.Column('longitude', sa.Float(), nullable=True))
    op.add_column('agencies', sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry'), nullable=True))
    op.add_column('agencies', sa.Column('location_str', sa.String(), nullable=True))
    result = conn.execute(sa.text("SELECT to_regclass('public.idx_agencies_location')"))
    index_exists = result.scalar()

    if not index_exists:
        # Create the index only if it doesn't exist
        op.create_index('idx_agencies_location', 'agencies', ['location'], unique=False, postgresql_using='gist')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_agencies_location', table_name='agencies', postgresql_using='gist')
    op.drop_column('agencies', 'location_str')
    op.drop_column('agencies', 'location')
    op.drop_column('agencies', 'longitude')
    op.drop_column('agencies', 'latitude')
    # ### end Alembic commands ###
